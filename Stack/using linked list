#include <iostream>
using namespace std;

//node creator
struct Node 
{
    int data ;
    Node *next ;
    Node(int x)
    {
        data = x ;
        next = NULL ;
    }
};

//stack class
class Stack 
{
    public:
    Node  *top ;
    Stack() //constructor
    {
        top = NULL ;
    }
    //operations
    void push(int ele);
    void display();
    int pop();
    int isEmpty();
    int stackTop();
};

void Stack :: push(int ele)
{
    Node *t = new Node(ele) ;
    if(t == NULL)
    {
        cout<<"stack overflow" ;  //happens when heap is full ,otherwise linked list is infinite
    }
    else
    {
        t->next = top ;
        top = t ;
    }
}
int Stack :: pop()
{
    if (top == NULL)
    {
        cout<<"stack underflow" ;
    }
    else
    {
        int x = top->data ;
        Node * p = top ;
        top = p->next ;
        delete p ;
        return x;
    }
    return -1;
}
void Stack :: display()
{
    Node *temp = top  ;
    while(temp!=NULL)
    {
        cout<<temp->data<<endl ;
        temp = temp->next ;
    }
}
int Stack:: stackTop()
{
    if(top == NULL)
    {
        cout<<"stack underflow" ;
    }
    else
    {
        return top->data ;
    }
    return -1;
}
int Stack :: isEmpty()
{
    if(top == NULL)
    {
        return 1 ;
    }
    return 0;
}
int main()
{
   Stack st ;
   int choice ,ele ;
   while(1)
   {
       cout<<"\nstack operations\n1.push\n2.pop\n3.display\n4.stack top\n5.isEmpty\n6.exit\n";
       cin>>choice ;
       switch(choice)
       {
           case 1:
           cout<<"Enter element to be pushed -";
           cin>>ele;
           st.push(ele);
           break ;
           
           case 2:
           cout<<"The popped element - "<<st.pop();
           break;
           
           case 3:
           st.display();
           break ;
           
           case 4:
           cout<<"Stack top element - "<<st.stackTop();
           break ;
           
           case 5:
           if(st.isEmpty())
           {
               cout<<"stack is empty" ;
           }
           else{
               cout<<"stackis not empty" ;
           }
           break; 
           
           case 6:
           default:
           return 0;
       }
   }
}
